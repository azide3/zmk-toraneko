/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&nice_view_spi {
    cs-gpios = <&pro_micro 10 GPIO_ACTIVE_HIGH>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
        };

        combo_settings {
            bindings = <&to 1>;
            key-positions = <38 37 29>;
        };

        combo_pp {
            bindings = <&kp C_PP>;
            key-positions = <5 6>;
        };

        combo_exclamation {
            bindings = <&kp EXCLAMATION>;
            key-positions = <2 3>;
        };

        combo_at_sign {
            bindings = <&kp AT>;
            key-positions = <3 4>;
        };

        combo_hash {
            bindings = <&kp HASH>;
            key-positions = <2 15>;
        };

        combo_dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <15 4>;
        };

        combo_percent {
            bindings = <&kp PERCENT>;
            key-positions = <2 4>;
        };

        combo_caret {
            bindings = <&kp CARET>;
            key-positions = <7 9>;
        };

        combo_ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <7 20>;
        };

        combo_asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <20 9>;
        };

        combo_left_parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <7 8>;
        };

        combo_right_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <8 9>;
        };

        combo_volume_up {
            bindings = <&kp C_VOLUME_UP>;
            key-positions = <27 28>;
        };

        combo_volume_down {
            bindings = <&kp C_VOLUME_DOWN>;
            key-positions = <25 26>;
        };

        combo_quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <9 10>;
        };

        combo_minus {
            bindings = <&kp MINUS>;
            key-positions = <21 22>;
        };

        combo_plus {
            bindings = <&kp PLUS>;
            key-positions = <22 34>;
        };

        combo_multiply {
            bindings = <&kp ASTERISK>;
            key-positions = <33 22>;
        };

        combo_equal {
            bindings = <&kp EQUAL>;
            key-positions = <33 34>;
        };

        combo_no1 {
            bindings = <&kp NUMBER_1>;
            key-positions = <40 31>;
        };

        combo_no2 {
            bindings = <&kp NUMBER_2>;
            key-positions = <40 32>;
        };

        combo_no3 {
            bindings = <&kp NUMBER_3>;
            key-positions = <40 33>;
        };

        combo_no4 {
            bindings = <&kp NUMBER_4>;
            key-positions = <40 19>;
        };

        combo_no5 {
            bindings = <&kp NUMBER_5>;
            key-positions = <40 20>;
        };

        combo_no6 {
            bindings = <&kp NUMBER_6>;
            key-positions = <40 21>;
        };

        combo_no7 {
            bindings = <&kp NUMBER_7>;
            key-positions = <40 7>;
        };

        combo_no8 {
            bindings = <&kp NUMBER_8>;
            key-positions = <40 8>;
        };

        combo_no9 {
            bindings = <&kp NUMBER_9>;
            key-positions = <40 9>;
        };

        combo_no0 {
            bindings = <&kp NUMBER_0>;
            key-positions = <40 10>;
        };

        combo_leftspace {
            bindings = <&kp LC(LEFT)>;
            key-positions = <1 13>;
        };

        combo_rightspace {
            bindings = <&kp LC(RIGHT)>;
            key-positions = <5 17>;
        };

        combo_nexttrack {
            bindings = <&kp C_NEXT>;
            key-positions = <26 27 28>;
        };

        combo_prevtrack {
            bindings = <&kp C_PREV>;
            key-positions = <25 26 27>;
        };

        combo_changelang {
            bindings = <&kp LC(SPACE)>;
            key-positions = <17 18 19 16>;
        };

        combo_up {
            bindings = <&kp UP>;
            key-positions = <3 15>;
        };

        combo_down {
            bindings = <&kp DOWN>;
            key-positions = <15 27>;
        };

        combo_left {
            bindings = <&kp LEFT>;
            key-positions = <15 14>;
        };

        combo_right {
            bindings = <&kp RIGHT>;
            key-positions = <15 16>;
        };

        combo_spaces {
            bindings = <&kp LC(UP)>;
            key-positions = <1 5>;
        };

        combo_to0 {
            bindings = <&to 0>;
            key-positions = <37 38>;
        };

        combo_screenshot {
            bindings = <&kp LG(LS(NUMBER_4))>;
            key-positions = <1 25 10 34>;
        };

        combo_cmd_left {
            bindings = <&kp LG(LEFT)>;
            key-positions = <1 3>;
        };

        combo_cmd_right {
            bindings = <&kp LG(RIGHT)>;
            key-positions = <3 5>;
        };

        combo_to2 {
            bindings = <&to 2>;
            key-positions = <40 39>;
        };

        combo_emoji {
            bindings = <&kp LG(LC(SPACE))>;
            key-positions = <4 5 6 7>;
        };
    };

    behaviors {
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
 &trans       &kp Q         &kp W  &gqt LG(E) E    &gqt LG(R) R          &gqt LG(T) T                 &kp Y   &gqt LG(U) U             &gqt LG(I) I                      &kp O           &kp P  &trans
 &trans  &gqt TAB A         &kp S   &gqt LALT D     &gqt LGUI F          &gqt LCTRL G           &gqt LALT H    &gqt LGUI J             &gqt LG(K) K               &gqt LG(L) L        &kp SEMI  &trans
 &trans       &kp Z  &gqt LG(X) X  &gqt LG(C) C    &gqt LG(V) V          &gqt LG(B) B          &gqt LG(N) N          &kp M  &gqt LEFT_BRACKET COMMA  &gqt RIGHT_BRACKET PERIOD  &gqt BSLH FSLH  &trans
                                         &trans  &kp LEFT_SHIFT  &gqt LS(ENTER) ENTER  &gqt LG(SPACE) SPACE  &kp BACKSPACE                   &trans
            >;
        };

        SETTINGS {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
 &trans  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans    &bt BT_CLR        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                           &trans        &trans  &trans  &trans  &trans  &trans
            >;
        };

        MOUSE {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
 &trans  &trans  &trans  &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &gqt LG(C) C  &gqt LG(V) V  &trans  &trans  &trans  &trans  &trans  &trans
                         &trans        &trans        &trans  &trans  &trans  &trans
            >;
        };
    };
};
